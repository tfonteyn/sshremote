plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
}

/*
    $HOME/.gradle/gradle.properties:
        SSHRemote.properties=$HOME/blah/blah/SSHRemote.properties

    $HOME/blah/blah/SSHRemote.properties:
        sign.storeFile=$HOME/blah/blah/keystore.jks
        sign.storePassword=MyStorePassword
        sign.keyAlias=MyKeyAlias
        sign.keyPassword=MyKeyPassword
 */
final def props = new Properties()
if (project.hasProperty("SSHRemote.properties")) {
    final def file = new File(project.property("SSHRemote.properties"))
    if (file.exists()) {
        props.load(new FileInputStream(file))
    }
}

android {
    namespace "com.hardbacknutter.sshremote"
    compileSdk = 34

    signingConfigs {
        release {
            storeFile file(props["sign.storeFile"])
            storePassword props["sign.storePassword"]
            keyAlias props["sign.keyAlias"]
            keyPassword props["sign.keyPassword"]
        }
    }

    defaultConfig {
        applicationId = "com.hardbacknutter.sshremote"
        versionCode = 4
        versionName = "1.2"

        minSdk = 26
        targetSdk = 34

        signingConfig(signingConfigs.release)

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true

            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro")
        }

        debug {
            debuggable = true
            versionNameSuffix = "-debug"
            applicationIdSuffix = ".debug"
        }
    }


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        // https://developer.android.com/studio/releases/#4-0-0-desugar
        coreLibraryDesugaringEnabled = true
    }

    kotlinOptions {
        jvmTarget = 11
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            // Can be enabled to make Log.x work. OR, use Logger.x
            returnDefaultValues = false
            all {
                reports {
                    junitXml.getRequired().set(true)
                    html.getRequired().set(false)
                }
            }
        }
    }

    lint {
        // allow command line builds to complete
        abortOnError = false
    }
}

dependencies {
    implementation project(path: ":ssh-client")
    debugImplementation project(path: ":ssh-client")

    // https://github.com/google/desugar_jdk_libs
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs_nio:2.0.3")
    //
    // https://developer.android.com/jetpack/androidx/versions
    implementation("androidx.activity:activity:1.7.2")
    implementation("androidx.annotation:annotation:1.6.0")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("androidx.coordinatorlayout:coordinatorlayout:1.2.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    implementation("androidx.core:core:1.10.1")
    implementation("androidx.customview:customview:1.1.0")
    implementation("androidx.documentfile:documentfile:1.0.1")
    implementation("androidx.drawerlayout:drawerlayout:1.2.0")
    implementation("androidx.fragment:fragment:1.6.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1")
    implementation("androidx.lifecycle:lifecycle-livedata:2.6.1")
    implementation("androidx.navigation:navigation-fragment:2.7.1")
    implementation("androidx.navigation:navigation-ui:2.7.1")
    implementation("androidx.preference:preference:1.2.1")
    implementation("androidx.recyclerview:recyclerview:1.3.1")
    implementation("androidx.room:room-runtime:2.5.2")

    annotationProcessor("androidx.room:room-compiler:2.5.2")

    // https://github.com/material-components/material-components-android/releases
    implementation("com.google.android.material:material:1.9.0")


    // local tests use JUnit5
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.0")

    // device tests use JUnit4
    androidTestImplementation("androidx.test:core:1.5.0")
    androidTestImplementation("androidx.test:runner:1.5.2")
    androidTestImplementation("androidx.test:rules:1.5.0")
}
